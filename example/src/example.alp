module example
export add, div, io_ffi

type maybe 'a = Just 'a | Nothing

-- simple function
let add x y = x + y
-- use generic ADT
let div x y =
  match y with
    | 0 -> Nothing
    | _ -> Just x / y

-- FFI example
val io_ffi : fn string -> ()
let io_ffi str =
  beam :"Elixir.IO" :puts [str] with
    :ok -> ()
